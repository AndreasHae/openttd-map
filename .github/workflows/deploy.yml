name: Build and deploy

on:
  push:
    branches: ["main"]

  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "deploy"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/webassembly/wasi-sdk:wasi-sdk-20
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Build Rust Webassembly module
      - name: Install Rust Stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Install wasm-pack
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: wasm-pack
      - name: Compile Rust to Webassembly with wasm-pack
        run: wasm-pack build --debug -F liblzma
        working-directory: savegame-reader

      # Build Next.js application
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: npm
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v1
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: npm ci
      - name: Run build
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
